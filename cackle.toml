[common]
version = 2
import_std = [
    "fs",
    "net",
    "process",
]

[sandbox]
kind = "Bubblewrap"

[pkg.bytemuck_derive]
allow_proc_macro = true
allow_unsafe = true

[pkg.unicode-ident]
allow_unsafe = true

[pkg.crc32fast]
allow_unsafe = true

[pkg.proc-macro2]
build.allow_apis = [
    "fs",
    "process",
]
allow_unsafe = true

[pkg.byteorder]
allow_unsafe = true

[pkg.syn]
allow_unsafe = true

[pkg.libc]
build.allow_apis = [
    "process",
]
allow_unsafe = true

[pkg.crossbeam-utils]
allow_unsafe = true

[pkg.anyhow]
build.allow_apis = [
    "fs",
    "process",
]
allow_unsafe = true

[pkg.memchr]
allow_unsafe = true

[pkg.either]
allow_unsafe = true

[pkg.crossbeam-epoch]
allow_unsafe = true

[pkg.crossbeam-queue]
allow_unsafe = true

[pkg.flate2]
allow_unsafe = true

[pkg.memmap2]
allow_unsafe = true
allow_apis = [
    "fs",
]

[pkg.wait-timeout]
allow_unsafe = true
from.test.allow_apis = [
    "process",
]

[pkg.crossbeam-deque]
allow_unsafe = true

[pkg.rayon-core]
allow_unsafe = true

[pkg.bytemuck]
allow_unsafe = true

[pkg.object]
allow_unsafe = true

[pkg.rayon]
allow_unsafe = true

[pkg.wild]
allow_unsafe = true
allow_apis = [
    "fs",
    "process",
]

[pkg.zerocopy-derive]
allow_proc_macro = true

[pkg.once_cell]
allow_unsafe = true

[pkg.version_check]
from.build.allow_apis = [
    "process",
]

[pkg.zerocopy]
allow_unsafe = true

[pkg.smallvec]
allow_unsafe = true

[pkg.ahash]
allow_unsafe = true

[pkg.tracing-attributes]
allow_proc_macro = true

[pkg.lazy_static]
allow_unsafe = true

[pkg.tracing-core]
allow_unsafe = true

[pkg.thread_local]
allow_unsafe = true

[pkg.pin-project-lite]
allow_unsafe = true

[pkg.sharded-slab]
allow_unsafe = true

[pkg.tracing]
allow_unsafe = true

[pkg.tracing-subscriber]
allow_unsafe = true

[pkg.libwild]
allow_unsafe = true
test.allow_unsafe = true
allow_apis = [
    "fs",
    "process",
]

[pkg.futures-macro]
allow_proc_macro = true
allow_unsafe = true

[pkg.clap_derive]
allow_proc_macro = true

[pkg.rstest_macros]
allow_proc_macro = true
allow_apis = [
    "fs",
]

[pkg.serde_derive]
allow_proc_macro = true

[pkg.scopeguard]
allow_unsafe = true

[pkg.stable_deref_trait]
allow_unsafe = true

[pkg.semver]
build.allow_apis = [
    "process",
]
allow_unsafe = true

[pkg.serde]
build.allow_apis = [
    "process",
]
allow_unsafe = true
allow_apis = [
    "fs",
]

[pkg.autocfg]
from.build.allow_apis = [
    "process",
]
allow_apis = [
    "fs",
]

[pkg.jobserver]
allow_unsafe = true
from.build.allow_apis = [
    "fs",
]

[pkg.hash32]
allow_unsafe = true

[pkg.bitflags]
allow_unsafe = true

[pkg.utf8parse]
allow_unsafe = true

[pkg.itertools]
allow_unsafe = true
from.test.allow_apis = [
    "fs",
]

[pkg.lock_api]
allow_unsafe = true

[pkg.cc]
allow_unsafe = true
from.build.allow_apis = [
    "fs",
    "process",
]

[pkg.anstyle]
allow_unsafe = true

[pkg.anstyle-query]
allow_unsafe = true

[pkg.anstyle-parse]
allow_unsafe = true

[pkg.uuid]
allow_unsafe = true

[pkg.rustc_version]
from.build.allow_apis = [
    "process",
]

[pkg.cpp_demangle]
build.allow_apis = [
    "fs",
]
allow_unsafe = true

[pkg.spin]
allow_unsafe = true

[pkg.pkg-config]
from.build.allow_apis = [
    "fs",
    "process",
]

[pkg.zstd-sys]
build.allow_apis = [
    "fs",
]
build.allow_build_instructions = [
    "cargo:include=*",
    "cargo:root=*",
    "cargo:rustc-link-lib=static=zstd",
    "cargo:rustc-link-search=native=*",
]

[pkg.anstream]
allow_unsafe = true

[pkg.clap_lex]
allow_unsafe = true

[pkg.symbolic-common]
allow_unsafe = true

[pkg.regex-automata]
allow_unsafe = true

[pkg.heapless]
allow_unsafe = true

[pkg.symbolic-demangle]
build.allow_build_instructions = [
    "cargo:rustc-link-lib=static=swiftdemangle",
    "cargo:rustc-link-lib=stdc++",
    "cargo:rustc-link-search=native=*",
]
allow_unsafe = true

[pkg.futures-sink]
allow_unsafe = true

[pkg.log]
allow_unsafe = true

[pkg.futures-core]
allow_unsafe = true

[pkg.hashbrown]
allow_unsafe = true

[pkg.aho-corasick]
allow_unsafe = true

[pkg.postcard]
allow_unsafe = true
allow_apis = [
    "fs",
]

[pkg.zstd-safe]
allow_unsafe = true

[pkg.nu-ansi-term]
allow_unsafe = true

[pkg.tracing-log]
allow_unsafe = true

[pkg.futures-channel]
allow_unsafe = true

[pkg.indexmap]
allow_unsafe = true

[pkg.matchers]
allow_unsafe = true

[pkg.slab]
allow_unsafe = true

[pkg.iced-x86]
allow_unsafe = true

[pkg.futures-task]
allow_unsafe = true

[pkg.pin-utils]
allow_unsafe = true

[pkg.winnow]
allow_unsafe = true

[pkg.bumpalo]
allow_unsafe = true

[pkg.zstd]
allow_unsafe = true

[pkg.sharded-vec-writer]
allow_unsafe = true

[pkg.rustix]
build.allow_apis = [
    "fs",
    "process",
]
allow_unsafe = true

[pkg.relative-path]
allow_unsafe = true
allow_apis = [
    "fs",
]

[pkg.futures-util]
allow_unsafe = true

[pkg.linux-raw-sys]
allow_unsafe = true

[pkg.bumpalo-herd]
allow_unsafe = true

[pkg.futures-timer]
allow_unsafe = true

[pkg.toml_edit]
allow_unsafe = true

[pkg.linker-layout]
allow_apis = [
    "fs",
]

[pkg.linker-trace]
allow_apis = [
    "fs",
]

[pkg.clap_builder]
allow_apis = [
    "fs",
]

[pkg.linker-diff]
allow_apis = [
    "fs",
]

[pkg.glob]
allow_apis = [
    "fs",
]

[pkg.proc-macro-crate]
allow_apis = [
    "fs",
    "process",
]

[pkg.which]
from.test.allow_apis = [
    "fs",
]

[api.fs]
no_auto_detect = [
    "wild",
]
include = [
    "rustix::fs",
    "libwild::fs",
]
