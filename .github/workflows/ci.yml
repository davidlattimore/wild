name: CI

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: '-D warnings'

jobs:
  test-nightly:
    name: Test (${{ contains(matrix.runs-on, 'arm') && 'AArch64' || 'x86_64'}}, ${{ matrix.container }})

    strategy:
      matrix:
        runs-on:
          - ubuntu-latest
          - ubuntu-24.04-arm
        container:
          - 'ubuntu:22.04'
          - 'ubuntu:latest'
          - 'ubuntu:rolling'
          - 'opensuse/tumbleweed:latest'
      fail-fast: false

    runs-on: ${{ matrix.runs-on }}

    container:
      image: ${{ matrix.container }}

    steps:
      - run: echo "ARCH=x86_64" >> $GITHUB_ENV
        if: ${{ runner.arch == 'X64' }}
      - run: echo "ARCH=aarch64" >> $GITHUB_ENV
        if: ${{ runner.arch == 'ARM64' }}
      - run: apt-get update && apt-get -y install gcc g++ clang lld curl bubblewrap
        if: ${{ contains(matrix.container, 'ubuntu') }}      
      - run: zypper in -y gcc gcc-c++ glibc-devel-static clang lld curl rustup bubblewrap
        if: ${{ contains(matrix.container, 'opensuse') }}
      - run: useradd -m -g users user && su user && cd ~
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        id: rust-toolchain
        with:
          targets: $ARCH-unknown-linux-gnu,$ARCH-unknown-linux-musl
          components: rustc-codegen-cranelift-preview
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.container }}-${{ matrix.runs-on }}-cargo-${{ steps.rust-toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo build --profile ci --workspace --no-default-features
      - run: cargo test --profile ci --workspace
        if: ${{ runner.arch == 'X64' }}
      # TODO: AArch64 test suite is not green yet
      - run: cargo test --profile ci --workspace || true
        if: ${{ runner.arch == 'ARM64' }}

  clippy:
    name: Clippy
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      id: rust-toolchain
      with:
        components: clippy
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-clippy-${{ steps.rust-toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}
    - run: cargo clippy --workspace --target x86_64-unknown-linux-gnu

  rustfmt:
    name: Check formatting
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt
    - run: cargo fmt --all -- --check
